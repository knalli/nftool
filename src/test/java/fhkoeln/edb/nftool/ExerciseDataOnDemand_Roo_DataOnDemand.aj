// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package fhkoeln.edb.nftool;

import fhkoeln.edb.nftool.Exercise;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect ExerciseDataOnDemand_Roo_DataOnDemand {
    
    declare @type: ExerciseDataOnDemand: @Component;
    
    private Random ExerciseDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Exercise> ExerciseDataOnDemand.data;
    
    public Exercise ExerciseDataOnDemand.getNewTransientExercise(int index) {
        fhkoeln.edb.nftool.Exercise obj = new fhkoeln.edb.nftool.Exercise();
        obj.setTitle("title_" + index);
        obj.setDescription("description_" + index);
        return obj;
    }
    
    public Exercise ExerciseDataOnDemand.getSpecificExercise(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Exercise obj = data.get(index);
        return Exercise.findExercise(obj.getId());
    }
    
    public Exercise ExerciseDataOnDemand.getRandomExercise() {
        init();
        Exercise obj = data.get(rnd.nextInt(data.size()));
        return Exercise.findExercise(obj.getId());
    }
    
    public boolean ExerciseDataOnDemand.modifyExercise(Exercise obj) {
        return false;
    }
    
    public void ExerciseDataOnDemand.init() {
        data = fhkoeln.edb.nftool.Exercise.findExerciseEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Exercise' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<fhkoeln.edb.nftool.Exercise>();
        for (int i = 0; i < 10; i++) {
            fhkoeln.edb.nftool.Exercise obj = getNewTransientExercise(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
