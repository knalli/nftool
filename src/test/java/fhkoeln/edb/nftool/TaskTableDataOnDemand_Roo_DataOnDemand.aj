// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package fhkoeln.edb.nftool;

import fhkoeln.edb.nftool.TaskTable;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect TaskTableDataOnDemand_Roo_DataOnDemand {
    
    declare @type: TaskTableDataOnDemand: @Component;
    
    private Random TaskTableDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<TaskTable> TaskTableDataOnDemand.data;
    
    public TaskTable TaskTableDataOnDemand.getNewTransientTaskTable(int index) {
        fhkoeln.edb.nftool.TaskTable obj = new fhkoeln.edb.nftool.TaskTable();
        obj.setOrdering(new Integer(index).shortValue());
        obj.setNormalform(new Integer(index).shortValue());
        return obj;
    }
    
    public TaskTable TaskTableDataOnDemand.getSpecificTaskTable(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        TaskTable obj = data.get(index);
        return TaskTable.findTaskTable(obj.getId());
    }
    
    public TaskTable TaskTableDataOnDemand.getRandomTaskTable() {
        init();
        TaskTable obj = data.get(rnd.nextInt(data.size()));
        return TaskTable.findTaskTable(obj.getId());
    }
    
    public boolean TaskTableDataOnDemand.modifyTaskTable(TaskTable obj) {
        return false;
    }
    
    public void TaskTableDataOnDemand.init() {
        data = fhkoeln.edb.nftool.TaskTable.findTaskTableEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'TaskTable' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<fhkoeln.edb.nftool.TaskTable>();
        for (int i = 0; i < 10; i++) {
            fhkoeln.edb.nftool.TaskTable obj = getNewTransientTaskTable(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
